{"version":3,"sources":["bg.jpg","home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","clearButton","width","borderRadius","padding","color","fontSize","fontWeight","media","height","imageCard","margin","maxWidth","backgroundColor","boxShadow","imageCardEmpty","gridContainer","justifyContent","mainContainer","backgroundImage","concat","image","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","tableContainer","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","detail","display","flexDirection","alignItems","appbar","loader","dropzone","border","transition","dropzoneText","fontFamily","ColorButton","withStyles","root","palette","getContrastText","common","white","grey","Button","ImageUpload","classes","selectedFile","setSelectedFile","useState","preview","setPreview","data","setData","imageUploaded","setImageUploaded","isLoading","setIsLoading","isMountedRef","useRef","useEffect","current","getRootProps","getInputProps","useDropzone","onDrop","acceptedFiles","file","objectUrl","URL","createObjectURL","accept","confidence","parseFloat","toFixed","_jsxs","React","Fragment","children","_jsx","AppBar","position","className","Toolbar","Typography","title","variant","noWrap","style","marginBottom","marginRight","Container","disableGutters","Grid","container","direction","spacing","item","xs","Card","CardActionArea","CardMedia","component","CardContent","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","class","CircularProgress","buttonGrid","startIcon","ClearIcon","onClick","clearData","async","formData","FormData","append","response","axios","post","error","console","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kXAAe,MAA0B,+B,wBC2BzC,MAAMA,EAAYC,aAAYC,IAAK,CACjCC,KAAM,CACJC,SAAU,GAEZC,YAAa,CACXC,MAAO,OACPC,aAAc,OACdC,QAAS,YACTC,MAAO,YACPC,SAAU,OACVC,WAAY,KAEdC,MAAO,CACLC,OAAQ,KAEVC,UAAW,CACTC,OAAQ,OACRC,SAAU,IACVH,OAAQ,IACRI,gBAAiB,cACjBC,UAAW,+CACXX,aAAc,QAEhBY,eAAgB,CACdN,OAAQ,QAEVO,cAAe,CACbC,eAAgB,SAChBb,QAAS,iBAEXc,cAAe,CACbC,gBAAgB,OAADC,OAASC,EAAK,KAC7BC,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAgB,QAChBf,OAAQ,OACRgB,UAAW,OAEbC,eAAgB,CACdb,gBAAiB,yBACjBC,UAAW,mBAEba,UAAW,CACTd,gBAAiB,0BAEnBe,SAAU,CACRf,gBAAiB,0BAEnBgB,UAAW,CACTvB,SAAU,OACVO,gBAAiB,yBACjBiB,YAAa,yBACbzB,MAAO,uBACPE,WAAY,SACZH,QAAS,qBAEX2B,WAAY,CACVzB,SAAU,OACVO,gBAAiB,yBACjBiB,YAAa,yBACbzB,MAAO,uBACPE,WAAY,SACZH,QAAS,qBAEX4B,UAAW,CACTnB,gBAAiB,0BAEnBoB,OAAQ,CACNpB,gBAAiB,QACjBqB,QAAS,OACTjB,eAAgB,SAChBkB,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNvB,UAAW,OACXT,MAAO,SACPQ,gBAAiB,SAEnByB,OAAQ,CACNjC,MAAO,sBAETkC,SAAU,CACRC,OAAQ,qBACRrC,aAAc,MACdU,gBAAiB,UACjBR,MAAO,UACPoC,WAAY,0BACZhC,OAAQ,OACRyB,QAAS,OACTE,WAAY,SACZnB,eAAgB,SAChBb,QAAS,QAEXsC,aAAc,CACZC,WAAY,mCACZpC,WAAY,OACZD,SAAU,OACVD,MAAO,YAILuC,EAAcC,aAAY/C,IAAK,CACnCgD,KAAM,CACJzC,MAAOP,EAAMiD,QAAQC,gBAAgBlD,EAAMiD,QAAQE,OAAOC,OAC1DrC,gBAAiBf,EAAMiD,QAAQE,OAAOC,MACtC,UAAW,CACTrC,gBAAiBf,EAAMiD,QAAQI,KAAK,UALtBN,CAQhBO,KAqLWC,MAjLKA,KAClB,MAAMC,EAAU1D,KACT2D,EAAcC,GAAmBC,mBAAS,OAC1CC,EAASC,GAAcF,mBAAS,OAChCG,EAAMC,GAAWJ,mBAAS,OAC1BK,EAAeC,GAAoBN,oBAAS,IAC5CO,EAAWC,GAAgBR,oBAAS,GACrCS,EAAeC,kBAAO,GAE5BC,qBAAU,IACD,KACLF,EAAaG,SAAU,CAAK,GAE7B,IAEH,MAiBM,aAAEC,EAAY,cAAEC,GAAkBC,YAAY,CAAEC,OAVtCC,IACd,MAAMC,EAAOD,EAAc,GAC3B,GAAIC,EAAM,CACR,MAAMC,EAAYC,IAAIC,gBAAgBH,GACtCnB,EAAgBmB,GAChBhB,EAAWiB,GACXb,GAAiB,EACnB,GAG4DgB,OAAQ,YAqBtE,IAAIC,EAKJ,OAJIpB,IACFoB,GAA4C,IAA9BC,WAAWrB,EAAKoB,aAAmBE,QAAQ,IAIzDC,eAACC,IAAMC,SAAQ,CAAAC,SAAA,CACbC,cAACC,IAAM,CAACC,SAAS,SAASC,UAAWpC,EAAQjB,OAAOiD,SAClDH,eAACQ,IAAO,CAAAL,SAAA,CACNC,cAACK,IAAU,CACTF,UAAWpC,EAAQuC,MACnBC,QAAQ,KACRC,QAAM,EACNC,MAAO,CACLC,aAAc,OACdC,YAAa,OACbvD,WAAY,gBACZpC,WAAY,OACZD,SAAU,OACVD,MAAO,SACPiF,SACH,mFAGDC,cAAA,OAAKG,UAAWpC,EAAQvD,YAG5BwF,cAACY,IAAS,CAACvF,UAAU,EAAO8E,UAAWpC,EAAQpC,cAAekF,gBAAc,EAAAd,SAC1EH,eAACkB,IAAI,CACHC,WAAS,EACTC,UAAU,MACVtF,eAAe,SACfmB,WAAW,SACXoE,QAAS,EACTd,UAAWpC,EAAQtC,cAAcsE,SAAA,CAEjCC,cAACc,IAAI,CAACI,MAAI,EAACC,GAAI,GAAGpB,SAChBH,eAACwB,IAAI,CAACjB,UAAS,GAAAtE,OAAKkC,EAAQ5C,UAAS,KAAAU,OAAK0C,EAAyC,GAAzBR,EAAQvC,gBAAsBuE,SAAA,CACrFxB,GACCyB,cAACqB,IAAc,CAAAtB,SACbC,cAACsB,IAAS,CACRnB,UAAWpC,EAAQ9C,MACnBsG,UAAU,MACVzF,MAAOqC,EACPmC,MAAM,6BAIV/B,GACAyB,cAACwB,IAAW,CAAAzB,SACVH,eAAA,UAASb,EAAa,CAAEoB,UAAWpC,EAAQf,WAAW+C,SAAA,CACpDC,cAAA,YAAWhB,MACXgB,cAACK,IAAU,CAACF,UAAWpC,EAAQZ,aAAa4C,SAAC,gFAMlD1B,GACC2B,cAACwB,IAAW,CAACrB,UAAWpC,EAAQrB,OAAOqD,SACrCC,cAACyB,IAAc,CAACF,UAAWG,IAAOvB,UAAWpC,EAAQ5B,eAAe4D,SAClEH,eAAC+B,IAAK,CAACC,KAAK,QAAQ,aAAW,eAAc7B,SAAA,CAC3CC,cAAC6B,IAAS,CAAC1B,UAAWpC,EAAQ3B,UAAU2D,SACtCH,eAACkC,IAAQ,CAAC3B,UAAWpC,EAAQ1B,SAAS0D,SAAA,CACpCC,cAAC+B,IAAS,CAAC5B,UAAWpC,EAAQvB,WAAWuD,SAAC,WAC1CC,cAAC+B,IAAS,CAACC,MAAM,QAAQ7B,UAAWpC,EAAQvB,WAAWuD,SAAC,qBAK5DC,cAACiC,IAAS,CAAC9B,UAAWpC,EAAQtB,UAAUsD,SACtCH,eAACkC,IAAQ,CAAC3B,UAAWpC,EAAQ1B,SAAS0D,SAAA,CACpCC,cAAC+B,IAAS,CAAC5B,UAAWpC,EAAQzB,UAAUyD,SAAE1B,EAAK6D,QAC/CtC,eAACmC,IAAS,CAACC,MAAM,QAAQ7B,UAAWpC,EAAQzB,UAAUyD,SAAA,CACnDN,EAAW,mBAQzBhB,GACCmB,eAAC4B,IAAW,CAACrB,UAAWpC,EAAQrB,OAAOqD,SAAA,CACrCC,cAACmC,IAAgB,CAACrH,MAAM,YAAYqF,UAAWpC,EAAQhB,SACvDiD,cAACK,IAAU,CAACE,QAAQ,KAAKC,QAAM,EAAAT,SAAC,uBAOvCxB,GACCyB,cAACc,IAAI,CAACI,MAAI,EAACf,UAAWpC,EAAQqE,WAAWrC,SACvCC,cAAC3C,EAAW,CACVkD,QAAQ,YACRJ,UAAWpC,EAAQrD,YACnBI,MAAM,UACN8G,KAAK,QACLS,UAAWrC,cAACsC,IAAS,CAACvH,SAAS,UAC/BwH,QA1IIC,KAChBlE,EAAQ,MACRE,GAAiB,GACjBP,EAAgB,MAChBG,EAAW,KAAK,EAsIe2B,SACpB,YAKJxB,IAAkBF,IAASI,GAC1BuB,cAACc,IAAI,CAACI,MAAI,EAACf,UAAWpC,EAAQqE,WAAWrC,SACvCC,cAAC3C,EAAW,CACVkD,QAAQ,YACRJ,UAAWpC,EAAQrD,YACnBkH,KAAK,QACLW,QAnIGE,UACf,GAAIzE,EAAc,CAChB,MAAM0E,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQ5E,GAExB,IACEU,GAAa,GACb,MAAMmE,QAAiBC,IAAMC,KA3CtB,8BA2CmCL,GACtC/D,EAAaG,SACfR,EAAQuE,EAASxE,KAErB,CAAE,MAAO2E,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CAAC,QACCtE,GAAa,EACf,CACF,GAmH8BqB,SACnB,uBAOM,EC/SNmD,MARf,WACE,OACElD,cAAA,OAAKG,UAAU,MAAKJ,SAClBC,cAAClC,EAAW,KAGlB,ECGeqF,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,EAAGC,SAAQC,SAAQC,SAAQC,SAAQC,cAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECHFQ,IAASC,OACP7D,cAACH,IAAMiE,WAAU,CAAA/D,SACfC,cAACkD,EAAG,MAENa,SAASC,eAAe,SAM1Bb,G","file":"static/js/main.3a779ae9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.8fc50ba2.jpg\";","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport image from \"./bg.jpg\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"100%\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: \"transparent\",\r\n    boxShadow: \"0px 9px 70px 0px rgb(0 0 0 / 30%) !important\",\r\n    borderRadius: \"15px\",\r\n  },\r\n  imageCardEmpty: {\r\n    height: \"auto\",\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: \"transparent !important\",\r\n    boxShadow: \"none !important\",\r\n  },\r\n  tableHead: {\r\n    backgroundColor: \"transparent !important\",\r\n  },\r\n  tableRow: {\r\n    backgroundColor: \"transparent !important\",\r\n  },\r\n  tableCell: {\r\n    fontSize: \"22px\",\r\n    backgroundColor: \"transparent !important\",\r\n    borderColor: \"transparent !important\",\r\n    color: \"#000000a6 !important\",\r\n    fontWeight: \"bolder\",\r\n    padding: \"1px 24px 1px 16px\",\r\n  },\r\n  tableCell1: {\r\n    fontSize: \"14px\",\r\n    backgroundColor: \"transparent !important\",\r\n    borderColor: \"transparent !important\",\r\n    color: \"#000000a6 !important\",\r\n    fontWeight: \"bolder\",\r\n    padding: \"1px 24px 1px 16px\",\r\n  },\r\n  tableBody: {\r\n    backgroundColor: \"transparent !important\",\r\n  },\r\n  detail: {\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  appbar: {\r\n    boxShadow: \"none\",\r\n    color: \"white \",\r\n    backgroundColor: \"black\",\r\n  },\r\n  loader: {\r\n    color: \"#be6a77 !important\",\r\n  },\r\n  dropzone: {\r\n    border: \"2px dashed #eeeeee\",\r\n    borderRadius: \"2px\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#bdbdbd\",\r\n    transition: \"border .24s ease-in-out\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"20px\",\r\n  },\r\n  dropzoneText: {\r\n    fontFamily: \"'Arial Black', Arial, sans-serif\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"20px\",\r\n    color: \"grey\", // Change to your desired color\r\n  },\r\n}));\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(theme.palette.common.white),\r\n    backgroundColor: theme.palette.common.white,\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nconst apiUrl = \"http://3.110.197.31/predict\";\r\n\r\nconst ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [preview, setPreview] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const [imageUploaded, setImageUploaded] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const isMountedRef = useRef(true);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImageUploaded(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  const onDrop = (acceptedFiles) => {\r\n    const file = acceptedFiles[0];\r\n    if (file) {\r\n      const objectUrl = URL.createObjectURL(file);\r\n      setSelectedFile(file);\r\n      setPreview(objectUrl);\r\n      setImageUploaded(true);\r\n    }\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: \"image/*\" });\r\n\r\n  const sendFile = async () => {\r\n    if (selectedFile) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.post(apiUrl, formData);\r\n        if (isMountedRef.current) {\r\n          setData(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  let confidence;\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            noWrap\r\n            style={{\r\n              marginBottom: \"10px\",\r\n              marginRight: \"20px\",\r\n              fontFamily: \"Comic Sans MS\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"18px\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            Uncovering the health of tomato plants: nurturing resilience from root to stem\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          className={classes.gridContainer}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!imageUploaded ? classes.imageCardEmpty : \"\"}`}>\r\n              {imageUploaded && (\r\n                <CardActionArea>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    component=\"img\"\r\n                    image={preview}\r\n                    title=\"Contemplative Reptile\"\r\n                  />\r\n                </CardActionArea>\r\n              )}\r\n              {!imageUploaded && (\r\n                <CardContent>\r\n                  <div {...getRootProps({ className: classes.dropzone })}>\r\n                    <input {...getInputProps()} />\r\n                    <Typography className={classes.dropzoneText}>\r\n                    Kindly  Drag 'n' drop tomato leaf image here, or click to select files\r\n                    </Typography>\r\n                  </div>\r\n                </CardContent>\r\n              )}\r\n              {data && (\r\n                <CardContent className={classes.detail}>\r\n                  <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table size=\"small\" aria-label=\"simple table\">\r\n                      <TableHead className={classes.tableHead}>\r\n                        <TableRow className={classes.tableRow}>\r\n                          <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                          <TableCell align=\"right\" className={classes.tableCell1}>\r\n                            Confidence:\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody className={classes.tableBody}>\r\n                        <TableRow className={classes.tableRow}>\r\n                          <TableCell className={classes.tableCell}>{data.class}</TableCell>\r\n                          <TableCell align=\"right\" className={classes.tableCell}>\r\n                            {confidence}%\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </CardContent>\r\n              )}\r\n              {isLoading && (\r\n                <CardContent className={classes.detail}>\r\n                  <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                  <Typography variant=\"h6\" noWrap>\r\n                    Processing\r\n                  </Typography>\r\n                </CardContent>\r\n              )}\r\n            </Card>\r\n          </Grid>\r\n          {imageUploaded && (\r\n            <Grid item className={classes.buttonGrid}>\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                className={classes.clearButton}\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                startIcon={<ClearIcon fontSize=\"large\" />}\r\n                onClick={clearData}\r\n              >\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>\r\n          )}\r\n          {imageUploaded && !data && !isLoading && (\r\n            <Grid item className={classes.buttonGrid}>\r\n              <ColorButton\r\n                variant=\"contained\"\r\n                className={classes.clearButton}\r\n                size=\"large\"\r\n                onClick={sendFile}\r\n              >\r\n                Send File\r\n              </ColorButton>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React from \"react\";\nimport ImageUpload from \"./home.js\"; // Make sure the path is correct\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ImageUpload />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}